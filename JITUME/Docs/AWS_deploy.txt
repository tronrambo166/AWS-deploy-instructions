
Step 1: Register domain
Step 2: Hosted Zones-> create new, or use default
Step 3: Elastic Ip Address-> create new for your domain(3.219.120.46)
Step 4: Assign EIp for www. & only domain, hosted zones -> create record
Step 5: Security Groups, create for http/https/ssh
------------------------------------------------------------------------
Step 6: RDS - Crete database/emr_db -> public:no/ yes as long as you want dev access
        ->ins endpoint=emrdb.cl2gw0jna8ks.us-east-1.rds.amazonaws.com / jitume.cl2gw0jna8ks.us-east-1.rds.amazonaws.com
	->master_user=emr_admin/jitume_admin
	->password=qsUJY7R1t9O0wpQsUw1I / qsUJY7R1t9O0wpQsUw1I
Step 7: EC2 Instance create(Ubuntu 20.04 LTS, minimum resources- ip/disable, t2micro, existing security, create key pair)
Step 8: Go to Elastic Ips, associate ip with new instance.
Step 9: connect with instance (goto where the key pair downloaded, 
open terminal and 
->->->->->-> ssh -i emr.pem ubuntu@3.219.120.46 / ssh -i jitumenew.pem ubuntu@52.204.76.44)
OR  ssh -i "jitume.pem" ec2-user@ec2-52-204-76-44.compute-1.amazonaws.com

Step 10: Install laravel & Php requirements
sudo apt update && 
sudo apt dist-upgrade && 
sudo apt install apache2  &&
sudo apt install software-properties-common &&
sudo add-apt-repository ppa:ondrej/php &&
sudo apt install php7.4-curl
	sudo apt install php7.4 php7.4-curl php7.4-cli php7.4-mbstring 
 	php7.4-mysql php7.4-dom php7.4-xml php7.4-xmlwriter
	php7.4-fpm php7.4-zip php7.4-gd php7.4-bcmath
	php7.4-ctype php7.4-fileinfo php7.4-json php7.4-mbstring php7.4-xml
	php7.4-openssl php7.4-pdo php7.4-tokenizer &&
These 2 separate
sudo apt install composer &&
sudo apt install python3-certbot-apache

Step 11: Configure .env file for production

--------------------------------------------------------------------------------------
Now all is ready!
1.'cd /var/www/' our project is ('cd /var/www/nodalhealthcare/') this is the root for all our websites. sudo rm -rf html/ to remove default html page
2.goto 'cd /var/www/' crete our directory folder sudo mkdir nodalhealthcare & access cd nodalhealthcare/
3. change user perm.
  - sudo chown -R ubuntu:ubuntu .
  - sudo chmod 775 .
  - ls -la to see all files
4.git init & git pull 'project-url'
5. create .env 'nano .env' then paste env code then CTRL+O/CTRL+X to save
6. install composer-> get link from getcomposer copy link & paste

 TRY TO RUN 'composer'
 if don't work
   - then composer is installed to: 'copy this directory & paste again'
   - sudo mv 'this dir' 'directory of no such file' -> enter

7. 
 -sudo apt install php7.4-mbstring
 -sudo apt install php7.4-curl
 -sudo apt install php7.4-dom
 -sudo apt install php7.4-mysql/sudo apt install mysql-client-core-8.0 
 - php -m to see all installed ext.
 - run 'composer install' to install packages inside composer.json file
    =if get (depedency isse, then replace composer.lock with localhost version, or     change php require in composer.lock)
 - php artisan key:generate

=> Now run php artisan migrate
 
 - if connection timed out, means your EC2 don't have access to RDS
=>Steps
 - type ip a to find your ip & copy it
 - go to EC2->security group ->create new (For production-DB, type:Mysql/Aurora, port:3306, source:ip)
 - go to RDS->databases, security group under connectivity -> remove default & select production-DB)
 - ELSE IF get unknown database error - all good!

8.Connect Database in Php myadmin/in Command
 - first connect with RDS instance from not root (mysql -h endpoint -P 3306 -u username -p)
 - ex:(mysql -h emrdb.cl2gw0jna8ks.us-east-1.rds.amazonaws.com -P 3306 -u emr_admin -p)
 - ex:(mysql -h jitume.cl2gw0jna8ks.us-east-1.rds.amazonaws.com -P 3306 -u jitume_admin -p)
 - if says 'mysql' not found, type - sudo apt install mysql-client-core-8.0
 - run mysql command again -> enter pass.

9. Now we are in MYSQL & Create DB
 - SHOW DATABASES; to see all
 - CREATE DATABASE db_name;
 - exit
 - run php artisan migrate

10. APACHE/Virtual host
 - (nodalhealthcare/) from root cd /etc/apache2/
 - ls sites-enabled/ folder
 -  // to disable default file
 - cd sites-available/ then ls
 - remove both files -> sudo rm -f filename
 => create virtual host
 - now you are in sites-available dir. then create conf. (sudo nano nodalhealthcare.conf)
 - paste virtual host codes there & save & exit
 - enable site (sudo a2ensite nodalhealthcare.conf)
 - restart apache ( sudo systemctl reload apache2.service)
 - then go back cd ./.. & ls sites-enabled/ to check if the file is there

YYYEP! Here we go!
Now we should see raw php code of our index.php when we hit our site address which means php not enabled for our apache, to enable
 - inside apache2 -> sudo apt install libapache2-mod-php7.4
 - sudo a2enmod php7.4
 - sudo a2enmod rewrite
 - sudo systemctl restart apache2.service

11. Very Last Step/Set permissions & SSL Certificate
 - create a session folder, from root->cd storage->cd framwork->mkdir sessions
 - go back to root(nodalhealthcare/)-> 
 - sudo chown -R www-data storage
  sudo chown -R www-data storage/framework
  sudo chmod g+w -R storage
  sudo chmod g+w -R storage/framework
  sudo chmod g+w -R storage/framework/sessions/
  sudo chmod g+w -R storage/logs/
=>for image upload
 - sudo chown -R www-data public
 
=> SSL
 - sudo apt install python3-certbot-apache
 - sudo certbot (make sure your server name/alias in virtual host file matches with records in hosted zones & actual site address)
 - give admin email previously given in virtual host
 - agree (A) then N for encryption then Https for '1' then '2'
 - sudo certbot --expand -d nodalhealthcare.com,www.nodalhealthcare.com
 - pretty much it!

EXTRAS_____________________________________________________________________________________________


Root:cd /var/www/nodalhealthcare/
ssh -i emr.pem ubuntu@3.219.120.46
***if you change wifi connection -> you must change the ip of SSH dev access security group

=> FOR IMPORT .SQL file
-goto AWS modify database set public:yes to access outside (VPC), if set no then can access only with ssh(VPC)
-install mysql workbench
-create connection (+sign)
-enter host endpoint, master_unsername,password ->test connection
-click on schema ->delete all tables
-goto administration->import->choose file->import


=> GIT PUSH
 -create git key(ssh-keygen -t ed25519 -C "tronrambo166@gmail.com")
 - press enter for file loc & passphase
 - copy the file loc that public key is saved e.g(/home/ubuntu/.ssh/id_ed25519.pub)
 - cat /home/ubuntu/.ssh/id_ed25519.pub
 - copy the key & go to github
git key : ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIANEyEYS8Kq7lqocqQ6Z4x9238WT9r7AK325k9dhVmas tronrambo166@gmail.com

 do git pull ssh-url again, if git push don't work


________________SOME RULES___________________________________

1.For restart: sudo systemcl restart httpd

2.If you change instance for a EIP, you will get error:WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!
then do: ssh-keygen -R <host>, the exact host from error message(basically your Elastic Ip)
 - If you get permission denied - sudo chmod 775 .

3.- If apache failed to restart
apachectl stop
It will throw an error message regarding syntax error in /etc/apache2/apache2.conf file
Correct it.
Then do

apachectl stop
sudo /etc/init.d/apache2 start

4. If get file_put_contents(.../bootstrap) permission denied, do chmod -R 777 bootstrap
5. Unable to write files (public/files/..) do chmod -R 777 public/files